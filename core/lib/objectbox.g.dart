// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by ObjectBox. To update it run the generator again
// with `dart run build_runner build`.
// See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// ignore_for_file: camel_case_types, depend_on_referenced_packages
// coverage:ignore-file

import 'dart:typed_data';

import 'package:flat_buffers/flat_buffers.dart' as fb;
import 'package:objectbox/internal.dart'
    as obx_int; // generated code can access "internal" functionality
import 'package:objectbox/objectbox.dart' as obx;
import 'package:objectbox_flutter_libs/objectbox_flutter_libs.dart';

import 'utils/ob_box/fcm_box.dart';
import 'utils/ob_box/scheduler_box.dart';

export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

final _entities = <obx_int.ModelEntity>[
  obx_int.ModelEntity(
      id: const obx_int.IdUid(1, 8949423407449947911),
      name: 'FCMBox',
      lastPropertyId: const obx_int.IdUid(2, 1442570201053051255),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 4856022847294391501),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 1442570201053051255),
            name: 'fcmData',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(2, 1757405109704101055),
      name: 'SchedulerBox',
      lastPropertyId: const obx_int.IdUid(3, 6445557818723422886),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 192585191858918159),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 6445557818723422886),
            name: 'data',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[])
];

/// Shortcut for [obx.Store.new] that passes [getObjectBoxModel] and for Flutter
/// apps by default a [directory] using `defaultStoreDirectory()` from the
/// ObjectBox Flutter library.
///
/// Note: for desktop apps it is recommended to specify a unique [directory].
///
/// See [obx.Store.new] for an explanation of all parameters.
///
/// For Flutter apps, also calls `loadObjectBoxLibraryAndroidCompat()` from
/// the ObjectBox Flutter library to fix loading the native ObjectBox library
/// on Android 6 and older.
Future<obx.Store> openStore(
    {String? directory,
    int? maxDBSizeInKB,
    int? maxDataSizeInKB,
    int? fileMode,
    int? maxReaders,
    bool queriesCaseSensitiveDefault = true,
    String? macosApplicationGroup}) async {
  await loadObjectBoxLibraryAndroidCompat();
  return obx.Store(getObjectBoxModel(),
      directory: directory ?? (await defaultStoreDirectory()).path,
      maxDBSizeInKB: maxDBSizeInKB,
      maxDataSizeInKB: maxDataSizeInKB,
      fileMode: fileMode,
      maxReaders: maxReaders,
      queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
      macosApplicationGroup: macosApplicationGroup);
}

/// Returns the ObjectBox model definition for this project for use with
/// [obx.Store.new].
obx_int.ModelDefinition getObjectBoxModel() {
  final model = obx_int.ModelInfo(
      entities: _entities,
      lastEntityId: const obx_int.IdUid(2, 1757405109704101055),
      lastIndexId: const obx_int.IdUid(0, 0),
      lastRelationId: const obx_int.IdUid(0, 0),
      lastSequenceId: const obx_int.IdUid(0, 0),
      retiredEntityUids: const [],
      retiredIndexUids: const [],
      retiredPropertyUids: const [1040627380150214594],
      retiredRelationUids: const [],
      modelVersion: 5,
      modelVersionParserMinimum: 5,
      version: 1);

  final bindings = <Type, obx_int.EntityDefinition>{
    FCMBox: obx_int.EntityDefinition<FCMBox>(
        model: _entities[0],
        toOneRelations: (FCMBox object) => [],
        toManyRelations: (FCMBox object) => {},
        getId: (FCMBox object) => object.id,
        setId: (FCMBox object, int id) {
          object.id = id;
        },
        objectToFB: (FCMBox object, fb.Builder fbb) {
          final fcmDataOffset =
              object.fcmData == null ? null : fbb.writeString(object.fcmData!);
          fbb.startTable(3);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, fcmDataOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final fcmDataParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 6);
          final object = FCMBox(id: idParam, fcmData: fcmDataParam);

          return object;
        }),
    SchedulerBox: obx_int.EntityDefinition<SchedulerBox>(
        model: _entities[1],
        toOneRelations: (SchedulerBox object) => [],
        toManyRelations: (SchedulerBox object) => {},
        getId: (SchedulerBox object) => object.id,
        setId: (SchedulerBox object, int id) {
          object.id = id;
        },
        objectToFB: (SchedulerBox object, fb.Builder fbb) {
          final dataOffset =
              object.data == null ? null : fbb.writeString(object.data!);
          fbb.startTable(4);
          fbb.addInt64(0, object.id);
          fbb.addOffset(2, dataOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final dataParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 8);
          final object = SchedulerBox(id: idParam, data: dataParam);

          return object;
        })
  };

  return obx_int.ModelDefinition(model, bindings);
}

/// [FCMBox] entity fields to define ObjectBox queries.
class FCMBox_ {
  /// See [FCMBox.id].
  static final id =
      obx.QueryIntegerProperty<FCMBox>(_entities[0].properties[0]);

  /// See [FCMBox.fcmData].
  static final fcmData =
      obx.QueryStringProperty<FCMBox>(_entities[0].properties[1]);
}

/// [SchedulerBox] entity fields to define ObjectBox queries.
class SchedulerBox_ {
  /// See [SchedulerBox.id].
  static final id =
      obx.QueryIntegerProperty<SchedulerBox>(_entities[1].properties[0]);

  /// See [SchedulerBox.data].
  static final data =
      obx.QueryStringProperty<SchedulerBox>(_entities[1].properties[1]);
}
